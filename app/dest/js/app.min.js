'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Contact = function () {
    function Contact(lastName, firstName, gender, age, check) {
        _classCallCheck(this, Contact);

        this.lastName = lastName;
        this.firstName = firstName;
        this.gender = gender;
        this.age = age;
        this.check = check;
    }

    _createClass(Contact, [{
        key: 'empty',
        value: function empty() {
            if (this.fieldEmpty('lastName') || this.fieldEmpty('firstName') || this.fieldEmpty('gender') || this.fieldEmpty('age')) return true;else return false;
        }
    }, {
        key: 'fieldEmpty',
        value: function fieldEmpty(name) {
            if (this[name] === null || this[name] === undefined || this[name] === "" || this[name] === 0) return true;else return false;
        }
    }]);

    return Contact;
}();
'use strict';

$(function () {

    Vue.prototype.$eventHub = new Vue();

    Vue.use(VeeValidate);

    if ($('#root')) {
        new Vue({
            el: '#root',
            data: {
                t1: '',
                t2: '',
                t3: ''
            },
            mounted: function mounted() {},

            methods: {}
        });
    }
});